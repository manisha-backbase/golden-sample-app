name: Release Drafter

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
        
  # workflow_run:
  #   workflows: ["labeler.yml"]
  #   types:
  #     - completed

jobs:
  # correct_repository:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: fail on fork
  #     if: github.repository_owner != 'Backbase'
  #     run: exit 1

  # echo_labels:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Debug issue number
  #       run: |
  #         x=${{ toJson(github.event.pull_request.labels.*.name) }}
  #         echo $x

  get_labels:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Labels
        uses: actions/github-script@v6
        id: get_issue_number
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0].number;
            }
          result-encoding: string

      - name: Issue number
        run: echo '${{steps.get_issue_number.outputs.result}}'
      
      - name: Get Labels
        if: github.event_name == 'push'
        id: get_labels
        uses: actions/github-script@v4
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { data: labels } = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.get_issue_number.outputs.result}}
            })
            const labels1 = labels.map(label => label.name)
            console.log(`::set-output name=libraries::${labels1}`);
   
  update_release_draft:
    if: github.event_name == 'push'
    needs: get_labels
    strategy:
      matrix:
        libraries: ${{ fromJson(needs.get_labels.outputs.libraries) }}
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          commitish: main
          name-template: ${{ matrix.libraries }}
          include-paths: lib/${{ matrix.libraries }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # update_release_draft-transfer:
  #     permissions:
  #       contents: write
  #       pull-requests: write
  #     if: contains(github.event.pull_request.labels.*.name, 'transfer')
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: release-drafter/release-drafter@v5
  #         with:
  #           config-name: release-drafter-transfer.yml
  #           commitish: main
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
