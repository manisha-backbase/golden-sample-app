name: Release Drafter

on:
  push:
    branches:
      - main

  # pull_request:
  #   types: [opened, reopened, synchronize]

  workflow_dispatch:

jobs:

  get_labels:
      runs-on: ubuntu-latest
      steps:
      - name: Issue number
        run: echo "${{ toJSON(github.event.pull_request.labels) }}"
        
  update_release_draft-transactions:
    if: contains(github.event.pull_request.labels.*.name, 'transactions')
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-transactions.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_release_draft-transfer:
    if: contains(github.event.pull_request.labels.*.name, 'transfer')
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-transfer.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-angular-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Get Angular version
        id: get-angular-version
        run: |
          version=$(node -p "require('./package-lock.json').dependencies['@angular/core'].version.split('.').shift()")
          echo "::set-output name=version::$version"

      - name: Update tag
        run: |
          tag='angular@v${{ steps.get-angular-version.outputs.version }}'
          git tag $tag -f
          git push origin $tag -f