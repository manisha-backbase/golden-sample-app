name: Release Drafter

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
        
  # workflow_run:
  #   workflows: ["labeler.yml"]
  #   types:
  #     - completed
env:
  FILE_NAME: "release-drafter-testing.yml"
  VALUE1: "golden-sample-app:.github/release-drafter.yml"
  VALUE2: "transfer@v$RESOLVED_VERSION"
  VALUE3: "transfer@v$RESOLVED_VERSION"
  VALUE4: "transfer@v"
  VALUE5: "libs/transfer/"
jobs:
  # correct_repository:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: fail on fork
  #     if: github.repository_owner != 'Backbase'
  #     run: exit 1

  # echo_labels:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Debug issue number
  #       run: |
  #         x=${{ toJson(github.event.pull_request.labels.*.name) }}
  #         echo $x

  get_labels:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Labels
        uses: actions/github-script@v6
        id: get_issue_number
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0].number;
            }
          result-encoding: string

      - name: Issue number
        run: echo '${{steps.get_issue_number.outputs.result}}'
      
      - name: Get Labels
        if: github.event_name == 'push'
        id: get_labels
        uses: actions/github-script@v4
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { data: labels } = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.get_issue_number.outputs.result}}
            })
            const labels1 = labels.map(label => label.name)
            console.log(`::set-output name=libraries::${labels1}`); 
  
  generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Generate YAML file
      run: |
        echo "_extends: ${{ env.VALUE1 }}" >> ${{ env.FILE_NAME }}
        echo "name-template: ${{ env.VALUE2 }}" >> ${{ env.FILE_NAME }}
        echo "tag-template: ${{ env.VALUE3 }}" >> ${{ env.FILE_NAME }}
        echo "tag-prefix: ${{ env.VALUE4 }}" >> ${{ env.FILE_NAME }}
        echo "include-paths: ${{ env.VALUE5 }}" >> ${{ env.FILE_NAME }}

    - name: Show YAML file
      run: |
        cat ${{ env.FILE_NAME }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: generated-yaml
        path: ${{ env.FILE_NAME }}

  # generate-config:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: fjogeleit/yaml-update-action@main
  #       with:
  #         createPR: 'false'
  #         valueFile: './.github/release-drafter-transfer.yml'
  #         commitChange: false
  #         branch: main
  #         masterBranchName: main
  #         changes: |
  #            {
  #               "$['name-template']": "transactions@v@v$RESOLVED_VERSION",
  #               "$['tag-template']": "transactions@v@v$RESOLVED_VERSION",
  #               "$['tag-prefix']": "transactions@v",
  #               "$['include-paths']": "libs/transactions"
  #             }
 
      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      #     cache: 'npm'
      #     registry-url: 'https://repo.backbase.com/artifactory/api/npm/npm-backbase/'
      #     scope: '@backbase'

      # - name: Install js-yaml
      #   run: npm ci --legacy-peer-deps
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Generate config file
      #   uses: actions/github-script@v4
      #   env: 
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     script: |
      #       const yaml = require('js-yaml');
      #       const fs = require('fs');
      #       const config = {
      #         '_extends': 'golden-sample-app:.github/release-drafter.yml',
      #         'name-template': 'transactions@v$RESOLVED_VERSION',
      #         'tag-template': 'transactions@v$RESOLVED_VERSION',
      #         'tag-prefix': 'transactions@v',
      #         'include-paths': 'libs/transactions/'
      #       };            
      #       const yamlString = yaml.dump(config);          
      #       fs.writeFileSync('.github/config.yml', yamlString);
      
  update_release_draft:
    # if: github.event_name == 'push'
    needs: generate
    # strategy:
    #   matrix:
    #     libraries: ['transactions', 'transfer']
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: generated-yaml
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: ${{ env.FILE_NAME }}
          commitish: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # update_release_draft-transfer:
  #     permissions:
  #       contents: write
  #       pull-requests: write
  #     if: contains(github.event.pull_request.labels.*.name, 'transfer')
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: release-drafter/release-drafter@v5
  #         with:
  #           config-name: release-drafter-transfer.yml
  #           commitish: main
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
