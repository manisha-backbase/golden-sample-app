name: Release Drafter

on:
  push:
    branches:
      - main

  # pull_request:
  #   types: [opened, reopened, synchronize]

  workflow_dispatch:

jobs:

  get_labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Labels
        uses: actions/github-script@v6
        id: get_issue_number
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0].number;
            }
          result-encoding: string

      - name: Issue number
        run: echo '${{steps.get_issue_number.outputs.result}}'
      
      - name: Get Labels
        if: github.event_name == 'push'
        id: get_labels
        uses: actions/github-script@v4
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { data: labels } = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.get_issue_number.outputs.result}}
            })
            const labels1 = labels.map(label => label.name)
            console.log(`::set-output name=libraries::${labels1}`); 

      - name: Issue number
        run: echo '${{steps.get_labels.outputs.libraries}}'

  update_release_draft-transactions:
    needs: get_labels
    if: contains(${{steps.get_labels.outputs.libraries}}, 'transactions')
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-transactions.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_release_draft-transfer:
    needs: get_labels
    if: contains(${{steps.get_labels.outputs.libraries}}, 'transfer')
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-transfer.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-angular-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Get Angular version
        id: get-angular-version
        run: |
          version=$(node -p "require('./package-lock.json').dependencies['@angular/core'].version.split('.').shift()")
          echo "::set-output name=version::$version"

      - name: Update tag
        run: |
          tag='angular@v${{ steps.get-angular-version.outputs.version }}'
          git tag $tag -f
          git push origin $tag -f